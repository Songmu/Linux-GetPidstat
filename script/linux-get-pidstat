#!/usr/bin/env perl
use strict;
use warnings;
use Getopt::Long qw/:config posix_default no_ignore_case bundling auto_help/;
use Pod::Usage;
use Linux::GetPidstat;

# check progs
my $pathes = +{};
my @progs = qw(pidstat pstree);
for my $prog (@progs) {
   my $path = `which $prog 2> /dev/null` or pod2usage(2);
   chomp $path if $path;
   $pathes->{$prog} = $path;
}

# get options
my %opt = (
    pid_dir       => './pid',
    include_child => '1',
    interval      => '60',
    dry_run       => '1'
);
GetOptions(
    \%opt, qw/
      pid_dir|p=s
      res_file|r=s
      interval|r=s
      dry_run|r=s
      include_child|r=s
      mackerel_api_key|r=s
      mackerel_service_name|r=s
      /
) or pod2usage(2);

my $stat = Linux::GetPidstat->new(%opt);
$stat->run;

__END__

=head1 NAME

linux-get-pidstat - cli tool for Linux::GetPidstat

=head1 SYNOPSIS

    linux-get-pidstat - command description
      Usage: command [options]
      Options:
        --pid_dir               A directory path for pid files
        --res_file              A file path to be stored results
        --interval              Interval second to be given as a pidstat argument
        --dry_run               Dry run mode. not run the side-effects operation
        --include_child         Flag to be enabled to include child process metrics
        --mackerel_api_key      An api key to be used for posting to mackerel
        --mackerel_service_name An mackerel service name
      Requirement Programs: pidstat and pstree commands
